import { Player } from './Player.js';
export class GameServerInfo {
    id = undefined;
    name = undefined;
    messageOfTheDay = undefined;
    passwordRequired = undefined;
    map = undefined;
    timeRemaining = undefined;
    scores = {
        bloodEagle: undefined,
        diamondSword: undefined
    };
    numberOfPlayers = undefined;
    maxNumberOfPlayers = undefined;
    officialRules = undefined;
    region = undefined;
    rankRequirement = {
        min: undefined,
        max: undefined,
        limit: undefined
    };
    ip = undefined;
    players = [];
    constructor(data) {
        let subData = data;
        if ('01C6' in data && '00E9' in data['01C6']) {
            subData = data['01C6']['00E9'][0];
        }
        this.id = subData['02C7'];
        this.name = subData['0300'];
        this.messageOfTheDay = subData['01A4'];
        this.passwordRequired = subData['069C'];
        this.map = subData['02B2'];
        this.timeRemaining = subData['02F4'];
        this.scores.bloodEagle = subData['D035']; // FIXME: Uses duplicate-remapped enum.
        this.scores.diamondSword = subData['D197']; // FIXME: Uses duplicate-remapped enum.
        this.numberOfPlayers = subData['0343'];
        this.maxNumberOfPlayers = subData['02D6'];
        this.officialRules = subData['0703'];
        this.region = subData['0448'];
        this.rankRequirement.min = subData['0299'];
        this.rankRequirement.max = subData['0298'];
        this.rankRequirement.limit = subData['06BF'];
        this.ip = subData['0246'];
        if ('0132' in subData) {
            subData['0132'].forEach((player) => {
                this.players.push(new Player(player));
            });
        }
    }
}
//# sourceMappingURL=GameServerInfo.js.map