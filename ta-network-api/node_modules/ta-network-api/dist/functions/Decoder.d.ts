import type { EnumTree } from '../interfaces/index.js';
export interface DecoderOptions {
    clean?: boolean;
    debug?: boolean;
}
export declare class Decoder {
    #private;
    constructor(tree: EnumTree, options?: DecoderOptions);
    /**
     * Decodes a machine-readable Enum Tree.
     * @returns A human-readable Enum Tree.
     */
    decode(): {
        [key: string]: any;
    };
    /**
     * Decode the binary content of an enumfield as an expected field type.
     * @param value The content of the enumfield.
     * @param type The type of enumfield to attempt to decode as.
     * @returns The decoded value. (Or the original value if decoding was not possible).
     */
    decodeFieldValue(value: Uint8Array, type: string): any;
}
//# sourceMappingURL=Decoder.d.ts.map