import { Player } from './Data.js';
import { UnlockableItem } from './Items.js';
import { Map } from './Maps.js';
import { Region } from './Regions.js';
import { WatchNowItem } from './WatchNow.js';
export declare type FetchableDataset = 'AccountData' | 'OnlinePlayersList' | 'OnlinePlayersNumber' | 'GameServerList' | 'GameServerInfo' | 'WatchNowList';
export declare type FetchType<T> = T extends 'AccountData' ? AccountData : T extends 'OnlinePlayersList' ? Player[] : T extends 'OnlinePlayersNumber' ? number : T extends 'GameServerInfo' ? GameServerInfo : T extends 'GameServerList' ? GameServerInfo[] : T extends 'WatchNowList' ? WatchNowList : never;
export declare type ListenableDatasets = 'PlayerOnlineNotification';
export interface AccountData {
    id: number;
    name: string;
    clanTag: string;
    rank: number;
    rankProgress: number;
    xp: number;
    gold: number;
    region: Region;
    items: UnlockableItem[];
}
export interface PlayerOnlineNotification {
    id: number;
    name: string;
    rank: number;
}
export interface GameServerInfo {
    id: number;
    name: string;
    messageOfTheDay: string;
    passwordRequired: boolean;
    map: Map;
    numberOfPlayers: number;
    maxNumberOfPlayers: number;
    officialRules: boolean;
    region: Region;
    rankRequirement: {
        min: number;
        max: number;
        limit: number;
    };
    ip: string;
}
export declare type WatchNowList = WatchNowItem[];
//# sourceMappingURL=Datasets.d.ts.map